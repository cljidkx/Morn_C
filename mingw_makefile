OPENMP=1
OPENCL=0
USE_SOCKET=1
USE_USBCAMERA=1
DEBUG=0

CC = gcc
CPPC = g++
LIB = ar
LIBDIR = ./lib/x64_mingw
REMOVE = rm -rf

WRAPDEF = 
DEPENDLIB = -lopenblas -lm
CCFLAGS = -O2 -fPIC -Wall

ifeq ($(OPENMP), 1)
CCFLAGS += -fopenmp
endif

ifeq ($(DEBUG), 1) 
CCFLAGS += -DDEBUG -D_DEBUG
endif

ifeq ($(OPENCL), 1)
CCFLAGS += -DMORN_USE_CL
DEPENDLIB += -lclBLAS -lOpenCL
endif

ifeq ($(USE_SOCKET),1)
WRAPDEF += -DMORN_USE_SOCKET
DEPENDLIB += -lws2_32
endif

ifeq ($(USE_USBCAMERA),1)
WRAPDEF += -DMORN_USE_USBCAMERA
DEPENDLIB += -lole32 -loleaut32 -lstrmiids
endif

STATICLIB = $(LIBDIR)/libmorn.a
SHAREDLIB = ./tool/libmorn.so

TOOLSOURCES = $(wildcard ./tool/*.c)
TOOLEXE = $(patsubst %.c,%.exe,$(TOOLSOURCES))

SOURCES  = $(wildcard ./src/util/*.c)
SOURCES += $(wildcard ./src/math/*.c)
SOURCES += $(wildcard ./src/ptc/*.c)
SOURCES += $(wildcard ./src/wave/*.c)
SOURCES += $(wildcard ./src/image/*.c)
SOURCES += $(wildcard ./src/deep_learning/*.c)
OBJS = $(patsubst %.c,%.ob,$(SOURCES))

WRAPSOURCES = $(wildcard ./src/wrap/*.c)
WRAPOBJS = $(patsubst %.c,%.ob,$(WRAPSOURCES)) 

WRAPSOURCES2 = $(wildcard ./src/wrap/*.cpp)
WRAPOBJS2 = $(patsubst %.cpp,%.ob,$(WRAPSOURCES2))

INCLUDEDIR = -I ./include

all:$(STATICLIB) $(TOOLEXE)

tool:$(TOOLEXE)

%.exe:%.c $(STATICLIB)
	$(CC) $(CCFLAGS) $(INCLUDEDIR) $< $(STATICLIB) -L $(LIBDIR) $(DEPENDLIB) -o $@

static:$(STATICLIB)

$(STATICLIB):$(OBJS) $(WRAPOBJS) $(WRAPOBJS2)
	$(LIB) -rc $(STATICLIB) $^

shared:$(SHAREDLIB)

$(SHAREDLIB):$(OBJS) $(WRAPOBJS) $(WRAPOBJS2)
	$(CC) $(CCFLAGS) -shared $^ -L $(LIBDIR) $(DEPENDLIB) -o $(SHAREDLIB)

$(WRAPOBJS):%.ob:%.c 
	$(CC) $(CCFLAGS) $(WRAPDEF) $(INCLUDEDIR) -c $< -o $@

$(WRAPOBJS2):%.ob:%.cpp 
	$(CPPC) $(CCFLAGS) $(WRAPDEF) $(INCLUDEDIR) -c $< -o $@

$(OBJS):%.ob:%.c
	$(CC) $(CCFLAGS) $(INCLUDEDIR) -c $< -o $@

#clean:
#	del /a /s .\src\*.ob
#	del /a .\tool\*.exe
#	del /a .\tool\libmorn.so
#	del /a .\lib\x64\mingw\libmorn.a
    
clean:
	rm -rf $(OBJS)
	rm -rf $(WRAPOBJS)
	rm -rf $(WRAPOBJS2)
	rm -rf $(STATICLIB)
	rm -rf $(SHAREDLIB)
	rm -rf $(TOOLEXE)
